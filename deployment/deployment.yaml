apiVersion: apps/v1
kind: Deployment
metadata:
  name: trade-data-feeder
spec:
  selector:
    matchLabels:
      app: trade-data-feeder
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      namespace: merugu
      labels:
        app: trade-data-feeder
    spec:
      containers:
        - name: trade-data-feeder
          image: merugu/trade-data-feeder:latest
          ports:
            - containerPort: 8080
          env:
            - name: MAGIC_LETTERS
              valueFrom:
                secretKeyRef:
                  key: api.key
                  name: api-secret
        - name: trade-data-feeder-envoy
          image: merugu/techie-hub-envoy:latest
          imagePullPolicy: IfNotPresent
          command:
            - "/usr/local/bin/envoy"
            - -c
            - "/envoy/envoy.yaml"
            - --service-cluster trade-data-feeder-envoy
          ports:
            - containerPort: 9080
              protocol: TCP
            - containerPort: 8001
              protocol: TCP
          volumeMounts:
            - mountPath: /envoy
              name: envoy-config
              readOnly: true
      volumes:
        - name: envoy-config
          configMap:
            name: trade-data-feeder-envoy
        - name: api-secret
          secret:
            defaultMode: 420
            secretName: api-secret

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trade-data-feeder-envoy
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - address:
            socket_address:
              address: 0.0.0.0
              port_value: 9080
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ingress_http
                    access_log:
                      - name: envoy.access_loggers.stdout
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                    http_filters:
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                    route_config:
                      name: ingress
                      virtual_hosts:
                        - name: ingress
                          domains: [ "*" ]
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                cluster: app
                            - match:
                                prefix: "/actuator"
                              route:
                                cluster: app
        - address:
            socket_address:
              address: 0.0.0.0
              port_value: 8085
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: outbound
                    http_filters:
                      - name: envoy.filters.http.router
                    route_config:
                      name: egress
                      virtual_hosts:
                        - name: egress
                          domains:
                            - "*"
                          routes:
                            - match: { prefix: "/v1/news" }
                              decorator:
                                operation: get-news
                              route:
                                cluster: api.marketaux.com|443
                                timeout: 2s
                                retry_policy:
                                  retry_on: 5xx
                                  num_retries: 2
                                  per_try_timeout: 1s
                          

      clusters:
        - name: app
          type: LOGICAL_DNS
          # Comment out the following line to test on v6 networks
          dns_lookup_family: V4_ONLY
          load_assignment:
            cluster_name: app
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 0.0.0.0
                          port_value: 8080
        - name: api.marketaux.com|443
          connect_timeout: 2s
          type: LOGICAL_DNS
          lb_policy: LEAST_REQUEST
          # Comment out the following line to test on v6 networks
          dns_lookup_family: V4_ONLY
          max_requests_per_connection: 10
          circuit_breakers:
            thresholds:
              - max_connections: 512
                max_pending_requests: 512
                max_retries: 3
          load_assignment:
            cluster_name: api.marketaux.com|443
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: api.marketaux.com
                          port_value: 443
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              sni: api.marketaux.com

    admin:
      access_log_path: "/dev/stdout"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001

---
apiVersion: v1
kind: Service
metadata:
  name: trade-data-feeder-service
spec:
  selector:
    app: trade-data-feeder
  ports:
    - name: http
      port: 80
    - name: ingress
      protocol: TCP
      port: 9080
      targetPort: 9080
  type: NodePort

